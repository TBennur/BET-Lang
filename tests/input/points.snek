; A program with a function that takes an x and a y coordinate and produces a 
; structure with those values, and a function that takes two points and returns 
; a new point with their x and y coordinates added together, along with several 
; tests that print example output from calling these functions.
; The output should be 4, 6, 8, 16, 18, 20

(struct point ((x int) (y int)))

(fun addPoint ((p point) (q point)) point 
    (let 
        ((r (alloc point)))
        (block 
            (update r x (+ (lookup p x) (lookup q x)))
            (update r y (+ (lookup p y) (lookup q y)))
            r
        )
    )
)

(let 
    (
        (p (alloc point))
        (q (alloc point))
        (r (alloc point))
    )
    (block 
        (update p x 1)
        (update p y 7)
        (update q x 3)
        (update q y 9)
        (update r x 5)
        (update r y 11)
        (
            let 
                (
                    (s (addPoint p q)) ; 4, 16
                    (t (addPoint p r)) ; 6, 18
                    (u (addPoint q r)) ; 8, 20
                )
                (block 
                    (print (lookup s x)) ; 4
                    (print (lookup s y)) ; 16
                    (print (lookup t x)) ; 6
                    (print (lookup t y)) ; 18
                    (print (lookup u x)) ; 8
                    (lookup u y) ; 20
                )
        )
    )
)